# -*- org-edit-src-content-indentation: 0; -*-
#+TITLE: org-ref: citations, cross-references, indexes, glossaries and bibtex utilities for org-mode

# <a href="https://travis-ci.org/jkitchin/org-ref"><img src="https://travis-ci.org/jkitchin/org-ref.svg?branch=master"></a>

#+BEGIN_html
<a href="https://github.com/jkitchin/org-ref/actions"><img src="https://github.com/jkitchin/org-ref/actions/workflows/test-org-ref.yml/badge.svg"></a>

<a href="https://melpa.org/#/org-ref"><img alt="MELPA" src="https://melpa.org/packages/org-ref-badge.svg"/></a>

<a href="http://stable.melpa.org/#/org-ref"><img alt="MELPA Stable" src="http://stable.melpa.org/packages/org-ref-badge.svg"/></a>
#+END_html

Overview of org-ref for export to PDF via LaTeX.

#+BEGIN_html
 <a href="https://www.youtube.com/watch?v=3u6eTSzHT6s">
 <img src="http://img.youtube.com/vi/3u6eTSzHT6s/0.jpg">
</a>
#+END_html

* About org-ref

=org-ref= makes it easy to insert citations, cross-references, indexes and glossaries as hyper-functional links into org files. The links are fontified so you can tell them apart from other links, and each link is clickable to access functions like opening a pdf, notes or url associated with the link. Each link also can be exported to LaTeX to build a PDF. For citations, export to other formats is supported by [[https://github.com/andras-simonyi/citeproc-el][citeproc]] for high quality export to HTML, markdown, plain text, or stand-alone (i.e. independent of a bibtex file) LaTeX. For a full explanation of the features in org-ref see [[./org-ref.org]].

* Breaking changes in version 3

Version 3 supports the original org-ref link-syntax, so all your legacy documents should still work as expected. Version 3 defaults to the new syntax, so new documents will have the newer style links in them.

Version 3 introduces several breaking (or at least, you will have to update some [[*Configuration]] to get it working again) changes for users with heavily customized org-ref version 2 setups. These are described below. 

Why the breaking changes? The main reason is to fully support a richer citation syntax that allows pre/postnotes on citations, and to integrate the use of CSL for non-LaTeX exports. Additionally, org-ref was in need of refactoring and improvements. org-ref is at least 7 years old, and has accumulated a lot of features in that time. I have been wanting to consolidate and clean up the code for a while, and the new syntax provided an opportunity for that.

I have also taken this opportunity to introduce some new libraries like [[./org-ref-refproc.el]] which is an analog of citeproc for cross-references in non-LaTeX exports.

If you are happy with your version 2 setup, you can keep it, and the version 2 branch exists (https://github.com/jkitchin/org-ref/tree/org-ref-2) and there is a stable v2.0 in MELPA-Stable. I do not plan to develop version 2 further.

** [2021-10-18 Mon] Short list of the main breaking changes

- Version 3 no longer uses many =org-ref-*= variables. See [[*Configuration]] for details.
- All completion candidates are generated by [[https://github.com/tmalsburg/helm-bibtex/blob/master/bibtex-completion.el][bibtex-completion]]
- There are only two backends - helm-bibtex and ivy-bibtex, and both rely on bibtex-completion
  - Neither helm nor ivy is automatically installed
  - The other backends have been removed
- Making/opening notes, opening PDFs are all handled by bibtex-completion functions
- Almost all of the non-LaTeX export is handled by [[https://github.com/andras-simonyi/citeproc-el][citeproc-el]] now (the tooltips are generated by bibtex-completion).
  - The older org-ref citeproc has been removed
- Drag-and-drop code is gone 
- legacy code supporting org-mode version 8 is gone

** What about org-cite?

A new syntax for citations was added in org-mode version 9.5. This library is similar to org-ref, in the sense that it provides a mechanism to add citations to org-files, but it has a different approach. org-cite is designed to be very modular, with different processors for inserting, activating, following and exporting citations. It also uses a different cite/style type of syntax. It does not handle cross-references or provide any of the bibtex tools that are available in org-ref. The main advantages of org-cite include:

1. It is built in to org-mode now
2. It is highly modular, so you can configure it any way you want

org-cite does not meet my citation and technical document publishing needs, and it was not possible to integrate it into org-ref without compromising those. I decided to continue developing org-ref for that reason. org-ref now provides the same citation capabilities as org-cite does as far as I know. I plan to continue using org-ref for my technical document writing activities.

You can use both org-cite and org-ref (although you should not do that in the same document as they are independent citation tools).

* Screenshots

Here are some annotated images of basic insertion of citations in org-mode. These are with the ivy backend.

#+attr_org: :width 800
[[./screenshots/introduction.png]]

This what an inserted link looks like.

#+attr_org: :width 800
#+caption: Tooltip on an inserted link.
[[./screenshots/cite-tooltip.png]]

The links in org-ref are hyper-functional (that means they have more than one action associated with them). They do things when your cursor is on them, or you click on them, and when the mouse hovers over them.

Here is an example of a menu of actions you get when you click on a cite link.

#+attr_org: :width 800
#+caption: Menu of actions from clicking on a cite link.
[[./screenshots/functional-cite-links.png]]

Here is a cross-reference link.

#+attr_org: :width 800
#+caption: Functional cross-reference link.
[[./screenshots/functional-links-2.png]]


org-ref can analyze your org-file and tell you about it, for example if there are bad citations, multiply defined labels, bad reference links, missing bibliography files, etc... You can select each one and it will jump to the location to help you fix it.

#+attr_org: :width 800
#+caption: Screenshot from the org-ref analysis command.
[[./screenshots/org-ref-analysis.png]]


* Installation

** Package installation via Melpa

org-ref has been added to Melpa. This is the recommended way to install org-ref as it should also install almost all the dependencies. It also should reflect what is in the master branch in the Github repo (https://github.com/jkitchin/org-ref).

#+BEGIN_SRC emacs-lisp
(add-to-list 'package-archives
	     '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)
#+END_SRC

Then, you should be able to do M-x package-list-packages, find org-ref and install it, or with

#+BEGIN_SRC emacs-lisp
(use-package org-ref)
#+END_SRC

Two exceptions to packages that are /not/ installed are helm, helm-bibtex, ivy and ivy-bibtex. You have to install those yourself. This change is to accommodate people who just can not stand having those packages installed if they do not use them.


** Installation via github

Make sure all the  [[https://github.com/jkitchin/org-ref/blob/master/org-ref.el#L9][dependencies]] are installed. Then clone this repo, add it to your load-path.

#+BEGIN_SRC sh
git clone https://github.com/jkitchin/org-ref.git
#+END_SRC

Add this to your .emacs file and see the [[*Configuration]] section.


** Configuration

Version 3 has eliminated all the =org-ref-*= variables, and instead uses analogous variables defined in =bibtex-completion=.  

There are some working configurations at https://github.com/jkitchin/org-ref/tree/master/melpa.

Here is how I have these variables set for myself.

#+BEGIN_SRC emacs-lisp
(setq bibtex-completion-bibliography '("~/Dropbox/emacs/bibliography/references.bib"
					 "~/Dropbox/emacs/bibliography/dei.bib"
					 "~/Dropbox/emacs/bibliography/master.bib"
					 "~/Dropbox/emacs/bibliography/archive.bib")
	bibtex-completion-library-path '("~/Dropbox/emacs/bibliography/bibtex-pdfs/")
	bibtex-completion-notes-path "~/Dropbox/emacs/bibliography/notes/"
	bibtex-completion-notes-template-multiple-files "* ${author-or-editor}, ${title}, ${journal}, (${year}) :${=type=}: \n\nSee [[cite:&${=key=}]]\n"

	bibtex-completion-additional-search-fields '(keywords)
	bibtex-completion-display-formats
	'((article       . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${journal:40}")
	  (inbook        . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} Chapter ${chapter:32}")
	  (incollection  . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
	  (inproceedings . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
	  (t             . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*}"))
	bibtex-completion-pdf-open-function
	(lambda (fpath)
	  (call-process "open" nil 0 nil fpath)))
#+END_SRC

I also find these settings helpful for automatically generating bibtex keys.

#+BEGIN_SRC emacs-lisp
(require 'bibtex)

(setq bibtex-autokey-year-length 4
	bibtex-autokey-name-year-separator "-"
	bibtex-autokey-year-title-separator "-"
	bibtex-autokey-titleword-separator "-"
	bibtex-autokey-titlewords 2
	bibtex-autokey-titlewords-stretch 1
	bibtex-autokey-titleword-length 5
	org-ref-bibtex-hydra-key-binding (kbd "H-b"))

(define-key bibtex-mode-map (kbd "H-b") 'org-ref-bibtex-hydra/body)
#+END_SRC

After you set those options, you have these options to load org-ref.

If you prefer ivy-bibtex, you should use this. It requires =ivy-bibtex=, but this is not currently automatically installed by MELPA.

#+BEGIN_SRC emacs-lisp
(require 'org-ref-ivy)

(setq org-ref-insert-link-function 'org-ref-insert-link-hydra/body
      org-ref-insert-cite-function 'org-ref-cite-insert-ivy
      org-ref-insert-label-function 'org-ref-insert-label-link
      org-ref-insert-ref-function 'org-ref-insert-ref-link
      org-ref-cite-onclick-function (lambda (_) (org-ref-citation-hydra/body)))
#+END_SRC

If you prefer helm, you can instead use this. This uses code from =helm-bibtex= for citation insertion. It requires helm-bibtex, but this is not currently automatically installed by MELPA.

#+BEGIN_SRC emacs-lisp
(require 'org-ref-helm)
(setq org-ref-insert-link-function 'org-ref-insert-link-hydra/body
      org-ref-insert-cite-function 'org-ref-cite-insert-helm
      org-ref-insert-label-function 'org-ref-insert-label-link
      org-ref-insert-ref-function 'org-ref-insert-ref-link
      org-ref-cite-onclick-function (lambda (_) (org-ref-citation-hydra/body)))
#+END_SRC

org-ref no longer binds keyboard shortcuts for you. You have some options here. To get the behavior of version 2, use this in your init file:

#+BEGIN_SRC emacs-lisp
(define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
#+END_SRC

- C-c ] :: insert a citation
- C-u C-c ] :: insert a cross-reference
- Cu C-u C-c ] :: insert a label

or

#+BEGIN_SRC emacs-lisp
(define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link-hydra)
#+END_SRC

- C-c ] c :: insert a citation
- C-c ] r :: insert a cross-reference
- C-c ] l :: insert a label

You can bind each insert command separately if you want after the library is loaded like this. Here I use the hyper key as a modifier, but you can choose anything you find convenient.

#+BEGIN_SRC emacs-lisp
(define-key org-mode-map (kbd "H-c") org-ref-insert-cite-function)
(define-key org-mode-map (kbd "H-r") org-ref-insert-ref-function)
(define-key org-mode-map (kbd "H-l") org-ref-insert-label-function)
#+END_SRC


If you use some other completing-read backend like selectrum, or ido, then for a bare-bones library that uses vanilla completing-read, you can simply require 'org-ref. I don't find the vanilla completing-read setup that useful on its own as it doesn't do candidate narrowing or fuzzy matching without some external configuration. It is an option if you want it though.

#+BEGIN_SRC emacs-lisp
(require 'org-ref)
#+END_SRC

You can use any other library that inserts links you want. Some of these include:

1. bibtex-actions (https://github.com/bdarcus/bibtex-actions#configuration)
2. ebib (https://joostkremers.github.io/ebib/)
3. You could even roll your own insert functions.


** LaTeX/PDF export

If you plan to build PDF files via LaTeX you need to make sure that org-latex-pdf-process is set to process the bibliography (using bibtex or biblatex). Here is one example of how to do that (see [[./org-ref.org::*LaTeX export]] for other alternatives).

#+BEGIN_SRC emacs-lisp
(setq org-latex-pdf-process (list "latexmk -shell-escape -bibtex -f -pdf %f"))
#+END_SRC

Go forth and citate.

* Some other useful libraries in org-ref

Note many of these have been renamed with an org-ref prefix.

- [[./doi-utils.el][doi-utils]] :: Download bibtex entries and PDFs from doi and crossref queries.
- [[./org-ref-pdf.el][org-ref-pdf]] :: Add drag-n-drop PDF to create bibtex entries
- [[./org-ref-url-utils.el][org-ref-url-utils]] :: Add drag-n-drop urls to create bibtex entries
- [[./org-ref-bibtex.el][org-ref-bibtex]] :: Utility functions for bibtex
- [[./org-ref-arxiv.el][org-ref-arxiv]] :: arxiv links, add bibtex entries from arxiv.org.
- [[./org-ref-pubmed.el][org-ref-pubmed]] :: pubmed links, add bibtex entries from PMID.
- [[./org-ref-isbn.el][org-ref-isbn]] :: Add bibtex entries from a book ISBN
- [[./org-ref-wos.el][org-ref-wos]] :: WebOfKnowledge links and queries
- [[./org-ref-scopus.el][org-ref-scopus]] :: Scopus links and queries
- [[./x2bib.el][x2bib]] :: Convert bibliography formats to and from bibtex
- [[./nist-webbook.el][nist-webbook]] :: Links to NIST Webbook resources
- [[./org-ref-scifinder.el][org-ref-scifinder]] :: one small function for searching SciFinder
- [[./org-ref-worldcat.el][org-ref-worldcat]] :: One small function for searching Worldcat

* Manual

For more information, see the [[https://github.com/jkitchin/org-ref/blob/master/org-ref.org][org-ref manual]], or preferably use ~M-x org-ref-help~ in emacs.

* Errors and issues

Please report errors here: [[https://github.com/jkitchin/org-ref/issues][issues]].

* Contributors

I would like to thank the [[https://github.com/jkitchin/org-ref/graphs/contributors][contributors]] to org-ref, and everyone who has filed an [[https://github.com/jkitchin/org-ref/issues][issue]], or asked about org-ref on the [[http://orgmode.org/community.html][org-mode Mailing list]].

If you are interested in making a contribution to org-ref, I encourage you to reach out to me to discuss the idea first. The issue handler is a great way to do that, so that others can offer opinions too.
